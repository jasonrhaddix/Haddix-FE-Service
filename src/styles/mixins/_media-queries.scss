/*
	RESPOND-AT
		Media query will respond only at viewport within the specific size
*/
@mixin respond-at( $media )
{
	@if $media == xsmall {
		@media only screen and (max-width: $breakpoint-x-small) { @content; }
	}
	@if $media == small {
		@media only screen and (min-width: $breakpoint-x-small + 1) and (max-width: $breakpoint-small) { @content; }
	}
	@if $media == medium {
		@media only screen and (min-width: $breakpoint-small + 1) and (max-width: $breakpoint-medium) { @content; }
	}
	@if $media == large {
		@media only screen and (min-width: $breakpoint-medium + 1) and (max-width: $breakpoint-large) { @content; }
	}
	@else if $media == xlarge {
		@media only screen and (min-width: $breakpoint-large + 1) and (max-width: $breakpoint-x-large) { @content; }
	}
}


/*
	RESPOND-TO
		Media query will respond from viewport 0 to the specified size
*/
@mixin respond-to( $media )
{
	@if $media == xsmall {
		@media only screen and (max-width: $breakpoint-x-small) { @content; }
	}
	@if $media == small {
		@media only screen and (max-width: $breakpoint-small) { @content; }
	}
	@if $media == medium {
		@media only screen and (max-width: $breakpoint-medium) { @content; }
	}
	@if $media == large {
		@media only screen and (max-width: $breakpoint-large) { @content; }
	}
	@else if $media == xlarge {
		@media only screen and (max-width: $breakpoint-x-large) { @content; }
	}
}



/*
	RESPOND-FROM
		Media query will respond from viewport $media and above
*/
@mixin respond-from( $media )
{
	@if $media == xsmall {
		@media only screen and (min-width: $breakpoint-x-small) { @content; }
	}
	@if $media == small {
		@media only screen and (min-width: $breakpoint-small) { @content; }
	}
	@if $media == medium {
		@media only screen and (min-width: $breakpoint-medium) { @content; }
	}
	@if $media == large {
		@media only screen and (min-width: $breakpoint-large) { @content; }
	}
	@else if $media == xlarge {
		@media only screen and (min-width: $breakpoint-x-large) { @content; }
	}
}
